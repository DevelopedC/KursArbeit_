#pragma once

#include "Field_data_.h"
 
using namespace Field_data; 

namespace Additional_Actions
{
	class Add_func
	{
	  public: 

		Fill_field CreateDrawCounter; // створенн€ об`Їкту класу, що заповнюЇ спрайт картами(створюЇ граф≥чну колоду), 
									  // робить доб≥р карт обом гравц€м, малюЇ к-сть карт в колод≥ гравц≥в

		int Time_player_card_size = 0; // зм≥нна-л≥чильник використ. дл€ в≥дмалюванн€ €коњсь к-ст≥ карт, що потрапили у в≥дб≥й. з карт осн. гравц€ 
		int TIME_Cards_player_me; // тимчасова зм≥нна осн. гравц€ , що записуЇ номера карт €к≥ потрапл€ть у в≥дб≥й  

		int Time_EnemyPlayer_card_size = 0; // зм≥нна-л≥чильник використ. дл€ в≥дмалюванн€ €коњсь к-ст≥ карт, що потрапили у в≥дб≥й. з карт противника 
		int TIME_Cards_player_enemy_1;  // тимчасова зм≥нна противника , що записуЇ номера карт €к≥ потрапл€ть у в≥дб≥й  

		const int initial_number_of_cards = 7; // к-сть карт, що буде роздаватис€ грац€м на початку гри

		int Logic(int time); // лог≥ка противника, що може в≥дбивати €к карту ≥ншого гравц€ так ≥ свою, ф-ц≥€ приймаЇ цей параметр

		void Delete_MeCards(int i); // ф-ц≥€, що видал€Ї з колоди основного гравц€ карту, та перем≥щаЇ њњ в масив карт де збер≥гаЇтьс€ в≥дб≥й 

		void Delete_CardsEnemy(int i); // ф-ц≥€, що видал€Ї з колоди противника карту

		void Random_Cards_Players(); // роздача випадкових карт, основного гравц€

		void Random_Cards_Players_enemy_1();  // роздача випадкових карт, противнику
	};
}